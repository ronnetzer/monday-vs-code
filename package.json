{
  "name": "vscode-pull-request-github",
  "displayName": "Monday and Issues",
  "description": "Pull Request and Issue Provider for GitHub",
  "icon": "resources/icons/github_logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-pull-request-github"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-pull-request-github/issues"
  },
  "enableProposedApi": true,
  "preview": true,
  "version": "0.17.0",
  "publisher": "GitHub",
  "engines": {
    "vscode": "^1.47.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*",
    "onFileSystem:newIssue"
  ],
  "extensionDependencies": [
    "vscode.git",
    "vscode.github-authentication"
  ],
  "main": "./media/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Monday",
      "properties": {
        "githubPullRequests.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable usage data and errors to be sent to a GitHub online service"
        },
        "githubPullRequests.hosts": {
          "type": "array",
          "default": [],
          "markdownDescription": "List of host credentials. For example, \"githubPullRequests.hosts\": [ { \"host\": \"https://github.com\", \"token\": \"GITHUB TOKEN\" } ]",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "The host name of the GitHub server (for eg., 'https://github.com')"
              },
              "username": {
                "type": "string",
                "description": "The username to access GitHub (optional)"
              },
              "token": {
                "type": "string",
                "description": "GitHub access token with the following scopes: read:user, user:email, repo, write:discussion"
              }
            }
          }
        },
        "githubPullRequests.pullRequestTitle": {
          "type": "string",
          "enum": [
            "commit",
            "branch",
            "custom",
            "ask"
          ],
          "enumDescriptions": [
            "Use the latest commit message",
            "Use the branch name",
            "Specify a custom title",
            "Ask which of the above methods to use"
          ],
          "default": "ask",
          "description": "The title used when creating pull requests."
        },
        "githubPullRequests.logLevel": {
          "type": "string",
          "enum": [
            "info",
            "debug",
            "off"
          ],
          "default": "info",
          "description": "Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request."
        },
        "githubPullRequests.remotes": {
          "type": "array",
          "default": [
            "origin",
            "upstream"
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "List of remotes, by name, to fetch pull requests from."
        },
        "githubPullRequests.includeRemotes": {
          "type": "string",
          "enum": [
            "default",
            "all"
          ],
          "default": "default",
          "deprecationMessage": "The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.",
          "description": "By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'."
        },
        "githubPullRequests.queries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label to display for the query in the Pull Requests tree"
              },
              "query": {
                "type": "string",
                "description": "The query used for searching pull requests."
              }
            }
          },
          "scope": "resource",
          "markdownDescription": "Specifies what queries should be used in the Monday tree. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.",
          "default": [
            {
              "label": "Waiting For My Review",
              "query": "is:open review-requested:${user}"
            },
            {
              "label": "Assigned To Me",
              "query": "is:open assignee:${user}"
            },
            {
              "label": "Created By Me",
              "query": "is:open author:${user}"
            }
          ]
        },
        "githubPullRequests.defaultMergeMethod": {
          "type": "string",
          "enum": [
            "merge",
            "squash",
            "rebase"
          ],
          "default": "merge",
          "description": "The method to use when merging pull requests."
        },
        "githubPullRequests.showInSCM": {
          "type": "boolean",
          "default": false,
          "description": "When true, show Monday within the SCM viewlet. Otherwise show a separate view container for them."
        },
        "githubPullRequests.fileListLayout": {
          "type": "string",
          "enum": [
            "flat",
            "tree"
          ],
          "default": "tree",
          "description": "The layout to use when displaying changed files list."
        },
        "githubPullRequests.defaultDeletionMethod.selectLocalBranch": {
          "type": "boolean",
          "default": true,
          "description": "When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request."
        },
        "githubPullRequests.defaultDeletionMethod.selectRemote": {
          "type": "boolean",
          "default": true,
          "description": "When true, the option to delete the remote will be selected by default when deleting a branch from a pull request."
        },
        "telemetry.optout": {
          "type": "boolean",
          "default": false,
          "deprecationMessage": "The setting `telemetry.optout` has been deprecated in favor of `githubPullRequests.telemetry.enabled`.",
          "description": "Disable usage data and errors to be sent to a GitHub online service"
        },
        "github.hosts": {
          "type": "array",
          "default": [],
          "deprecationMessage": "The setting `github.hosts` has been deprecated in favor of `githubPullRequests.hosts`.",
          "description": "List of host credentials. For example, \"github.hosts\": [ { \"host\": \"https://github.com\", \"token\": \"GITHUB TOKEN\" } ]",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "The host name of the GitHub server (for eg., 'https://github.com')"
              },
              "username": {
                "type": "string",
                "description": "The username to access GitHub (optional)"
              },
              "token": {
                "type": "string",
                "description": "GitHub access token with the following scopes: read:user, user:email, repo, write:discussion"
              }
            }
          }
        },
        "githubIssues.ignoreMilestones": {
          "type": "array",
          "default": [],
          "description": "An array of milestones titles to never show issues from."
        },
        "githubIssues.createIssueTriggers": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "String that enables the 'Create issue from comment' code action. Should not container whitespace."
          },
          "default": [
            "TODO",
            "todo",
            "BUG",
            "FIXME",
            "ISSUE",
            "HACK"
          ],
          "description": "Strings that will cause the 'Create issue from comment' code action to show."
        },
        "githubIssues.createInsertFormat": {
          "type": "string",
          "enum": [
            "number",
            "url"
          ],
          "default": "number",
          "description": "Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run."
        },
        "githubIssues.issueCompletions.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Controls whether completion suggestions are shown for issues."
        },
        "githubIssues.userCompletions.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Controls whether completion suggestions are shown for users."
        },
        "githubIssues.ignoreCompletionTrigger": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Language that issue completions should not trigger on '#'."
          },
          "default": [
            "python"
          ],
          "description": "Languages that the '#' character should not be used to trigger issue completion suggestions."
        },
        "githubIssues.ignoreUserCompletionTrigger": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Language that user completions should not trigger on '@'."
          },
          "default": [
            "python"
          ],
          "description": "Languages that the '@' character should not be used to trigger user completion suggestions."
        },
        "githubIssues.workingIssueBranch": {
          "type": "string",
          "default": "${user}/issue${issueNumber}",
          "description": "Advanced settings for the name of the branch that is created when you start working on an issue. ${user} will be replace with the currently logged in username and ${issueNumber} will be replaced with the current issue number. You can also use ${sanitizedIssueTitle}."
        },
        "githubIssues.useBranchForIssues": {
          "type": "string",
          "enum": [
            "on",
            "off",
            "prompt"
          ],
          "enumDescriptions": [
            "A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.",
            "A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.",
            "A prompt will show for setting the name of the branch that will be created and checked out."
          ],
          "default": "on",
          "description": "Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `githubIssues.workingIssueBranch`."
        },
        "githubIssues.issueCompletionFormatScm": {
          "type": "string",
          "default": "${issueTitle} ${issueNumberLabel}",
          "description": "Sets the format of issue completions in the SCM inputbox. For example, '${issueNumberLabel}'"
        },
        "githubIssues.workingIssueFormatScm": {
          "type": "string",
          "default": "${issueTitle} \nFixes ${issueNumberLabel}",
          "description": "Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to '${issueTitle} \nFixes #${issueNumber}'"
        },
        "githubIssues.queries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label to display for the query in the Issues tree."
              },
              "query": {
                "type": "string",
                "markdownDescription": "The search query using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The variable `${user}` can be used to specify the logged in user within a search. `${owner}` and `${repository}` can be used to specify the repository by using `repo:${owner}/${repository}`."
              }
            }
          },
          "scope": "resource",
          "markdownDescription": "Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The \"default\" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.",
          "default": [
            {
              "label": "My Issues",
              "query": "default"
            },
            {
              "label": "Created Issues",
              "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
            }
          ]
        }
      }
    },
    "viewsContainers": {},
    "views": {},
    "commands": [
      {
        "command": "auth.signout",
        "title": "Sign out of Monday",
        "category": "Monday"
      },
      {
        "command": "auth.login",
        "title": "Sign in to Monday",
        "category": "Monday"
      },
      {
        "command": "issue.createIssueFromSelection",
        "title": "Create Issue From Selection",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.createIssueFromClipboard",
        "title": "Create Issue From Clipboard",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.copyGithubPermalink",
        "title": "Copy GitHub Permalink",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.openGithubPermalink",
        "title": "Open Permalink in Github",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.openIssue",
        "title": "Open Issue",
        "category": "GitHub Issues",
        "icon": "$(globe)"
      },
      {
        "command": "issue.copyIssueNumber",
        "title": "Copy Number",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.copyIssueUrl",
        "title": "Copy Url",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.refresh",
        "title": "Refresh",
        "category": "GitHub Issues",
        "icon": "$(refresh)"
      },
      {
        "command": "issue.suggestRefresh",
        "title": "Refresh Suggestions",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.startWorking",
        "title": "Start Working on Issue",
        "category": "GitHub Issues",
        "icon": "$(arrow-right)"
      },
      {
        "command": "issue.continueWorking",
        "title": "Continue Working on Issue",
        "category": "GitHub Issues",
        "icon": "$(arrow-right)"
      },
      {
        "command": "issue.startWorkingBranchPrompt",
        "title": "Start Working and Set Branch...",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.stopWorking",
        "title": "Stop Working on Issue",
        "category": "GitHub Issues",
        "icon": "$(primitive-square)"
      },
      {
        "command": "issue.statusBar",
        "title": "Current Issue Options",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.getCurrent",
        "title": "Get current issue",
        "category": "GitHub Issues"
      },
      {
        "command": "issue.editQuery",
        "title": "Edit Query",
        "category": "GitHub Issues",
        "icon": "$(edit)"
      },
      {
        "command": "issue.createIssue",
        "title": "Create an Issue",
        "category": "GitHub Issues",
        "icon": "$(plus)"
      },
      {
        "command": "issue.createIssueFromFile",
        "title": "Create Issue",
        "icon": "$(check)"
      },
      {
        "command": "issue.issueCompletion",
        "title": "Issue Completion Chosen"
      },
      {
        "command": "issue.userCompletion",
        "title": "User Completion Chosen"
      },
      {
        "command": "issue.signinAndRefreshList",
        "title": "Sign in and Refresh",
        "category": "GitHub Issues"
      }
    ],
    "viewsWelcome": [
      {
        "view": "pr:github",
        "when": "PRManagerStateContext == NeedsAuthentication",
        "contents": "You have not yet signed in with Monday\n[Sign in](command:auth.signin)"
      },
      {
        "view": "issues:github",
        "when": "PRManagerStateContext == NeedsAuthentication",
        "contents": "You have not yet signed in with Monday\n[Sign in](command:auth.signin)"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+shift+space",
        "command": "issue.suggestRefresh",
        "when": "suggestWidgetVisible"
      },
      {
        "key": "ctrl+s",
        "command": "issue.createIssueFromFile",
        "when": "resourceScheme == newIssue && config.files.autoSave != off"
      }
    ],
    "colors": [
      {
        "id": "issues.newIssueDecoration",
        "defaults": {
          "dark": "#ffffff48",
          "light": "#00000048",
          "highContrast": "editor.foreground"
        },
        "description": "The color used for the assignees and labels fields in a new issue editor."
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --env.production",
    "postinstall": "cd src/typings && npx vscode-dts master && npx vscode-dts dev master",
    "compile": "tsc -p ./",
    "clean": "rm -r out/ media/",
    "watch": "webpack --watch --env.development",
    "test": "yarn run preprocess && node ./out/test/runTests.js",
    "preprocess": "yarn run compile && yarn run preprocess-gql && yarn run preprocess-svg",
    "preprocess-gql": "node scripts/preprocess-gql --in src/github/queries.gql --out out/github/queries.gql"
  },
  "devDependencies": {
    "@types/chai": "^4.1.4",
    "@types/debounce": "^3.0.0",
    "@types/express": "4.11.1",
    "@types/glob": "7.1.1",
    "@types/graphql": "^14.0.5",
    "@types/keytar": "^4.0.1",
    "@types/lru-cache": "^5.1.0",
    "@types/marked": "^0.7.2",
    "@types/mocha": "^5.2.2",
    "@types/node": "^12.0.0",
    "@types/node-fetch": "^2.1.4",
    "@types/query-string": "^6.1.1",
    "@types/react": "^16.8.4",
    "@types/react-dom": "^16.8.2",
    "@types/sinon": "7.0.11",
    "@types/temp": "0.8.34",
    "@types/uuid": "^3.4.3",
    "@types/webpack": "^4.41.6",
    "css-loader": "^3.4.2",
    "glob": "7.1.6",
    "jsdom": "16.2.0",
    "jsdom-global": "3.0.2",
    "minimist": "^1.2.3",
    "mkdirp": "0.5.1",
    "mocha": "^7.0.1",
    "mocha-junit-reporter": "1.23.0",
    "mocha-multi-reporters": "1.1.7",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "react-testing-library": "7.0.1",
    "sinon": "9.0.0",
    "source-map-support": "0.5.16",
    "style-loader": "^1.1.3",
    "svg-inline-loader": "^0.8.2",
    "temp": "0.9.1",
    "ts-loader": "^6.2.1",
    "tslint": "^6.0.0",
    "tslint-webpack-plugin": "^2.1.0",
    "tty": "1.0.1",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0",
    "webpack": "^4.41.6",
    "webpack-cli": "^3.3.11"
  },
  "dependencies": {
    "@octokit/rest": "^16.21.0",
    "apollo-boost": "^0.1.22",
    "apollo-link-context": "^1.0.12",
    "debounce": "^1.2.0",
    "es6-promise": "^4.2.5",
    "events": "^3.0.0",
    "git-credential-node": "^1.1.0",
    "graphql": "^14.0.2",
    "js-base64": "^2.5.2",
    "lru-cache": "^5.1.1",
    "marked": "^0.8.0",
    "moment": "^2.22.1",
    "monday-sdk-js": "0.1.0",
    "node-emoji": "^1.8.1",
    "node-fetch": "3.0.0-beta.7",
    "query-string": "^6.2.0",
    "ssh-config": "^2.0.0-alpha.3",
    "tunnel": "0.0.6",
    "uuid": "^3.3.3",
    "vscode-extension-telemetry": "^0.1.6",
    "vsls": "^0.3.967"
  },
  "optionalDependencies": {
    "spawn-sync": "^2.0.0"
  },
  "resolutions": {
    "webpack/**/tar": "^4.4.2"
  },
  "license": "MIT"
}